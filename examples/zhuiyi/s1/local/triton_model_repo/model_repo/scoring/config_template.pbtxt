name: "scoring"
backend: "python"
max_batch_size: 64

parameters [
  {
    key: "beam_size",
    value: { string_value: "10" }
  },
  {
    key: "cutoff_prob",
    value: { string_value: "0.9999" }
  },
  {
    key: "lm_path",
    value: { string_value: "#lm_path"}
  },
  {
    key: "alpha",
    value: { string_value: "0.5" }
  },
  {
    key: "beta",
    value: { string_value: "0.5" }
  },
  {
    key: "vocab_path",
    value: { string_value: "#vocab_path"}
  },
  {
    key: "context_path",
    value: { string_value: "#htw_path"}
  },
  {
    key: "context_score",
    value: { string_value: "3"}
  },
  {
    key: "incremental_context_score",
    value: { string_value: "0"}
  },
  {
    key: "max_contexts",
    value: { string_value: "5000"}
  },
  {
    key: "bidecoder",
    value: { string_value: "#bidecoder"}
  },
  {
    key: "rescoring",
    value: { string_value: "1" }
  },
  {
    key: "num_processes",
    value: { string_value: "-1"}
  },
  {
   key: "FORCE_CPU_ONLY_INPUT_TENSORS",
   value: {string_value:"yes"}
  }
]

input [
  {
    name: "encoder_out"
    data_type: TYPE_#DTYPE
    dims: [-1, #output_size] # [-1, feature_size]
  },
  {
    name: "encoder_out_lens"
    data_type: TYPE_INT32
    dims: [1]
    reshape: { shape: [ ] }
  },
  {
    name: "batch_log_probs"
    data_type: TYPE_#DTYPE
    dims: [-1, #beam_size] #[-1, beam_size]
  },
  {
    name: "batch_log_probs_idx"
    data_type: TYPE_INT64
    dims: [-1, #beam_size]
  }
]

output [
  {
    name: "OUTPUT0"
    data_type: TYPE_STRING
    dims: [1]
  },
  {
    name: "OUTPUT1"
    data_type: TYPE_FP32
    dims: [1]
    reshape { shape: [] }
  }
]

dynamic_batching {
    preferred_batch_size: [ 16, 32 ]
  }
instance_group [
    {
      count: 4
      kind: KIND_CPU
    }
  ]
